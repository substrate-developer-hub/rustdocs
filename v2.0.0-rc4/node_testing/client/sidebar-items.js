initSidebarItems({"enum":[["AccountKeyring","Set of test accounts."],["Ed25519Keyring","Set of test accounts."],["ExecutionStrategy","Strategy for executing a call into the runtime."],["Sr25519Keyring","Set of test accounts."],["WasmExecutionMethod","Specification of different methods of executing the runtime Wasm code."]],"fn":[["tasks_executor","Create tasks executor."]],"mod":[["client","Substrate Client and associated logic."],["client_ext","Client extension for tests."],["sc_client_db","Client backend that is backed by a database."],["sc_executor","A crate that provides means of executing/dispatching calls into the runtime."],["sp_consensus","Common utilities for building and using consensus engines in substrate."]],"struct":[["Backend","Disk backend."],["ExecutionExtensions","A producer of execution extensions for offchain calls."],["ExecutionStrategies","Execution strategies settings."],["GenesisParameters","Genesis configuration parameters for `TestClient`."],["NativeExecutor","A generic `CodeExecutor` implementation that uses a delegate to determine wasm code equivalence and dispatch to native code when possible, falling back on `WasmExecutor` when not."],["Storage","Struct containing data needed for a storage."],["StorageChild","Child trie storage data."],["TestClientBuilder","A builder for creating a test client instance."]],"trait":[["ClientBlockImportExt","Extension trait for a test client around block importing."],["ClientExt","Extension trait for a test client."],["CloneableSpawn","Something that can spawn tasks and also can be cloned."],["GenesisInit","A genesis storage initialization trait."],["TestClientBuilderExt","A `test-runtime` extensions to `TestClientBuilder`."]],"type":[["Backend","Default backend type."],["BadBlocks","Known bad block hashes."],["BareCryptoStorePtr","A pointer to the key store."],["Client","Test client type."],["Executor","Call executor for `node-runtime` `TestClient`."],["ForkBlocks","Expected hashes of blocks at given heights."],["LightBackend","Test client light database backend."],["Transaction","Transaction for node-runtime."]]});