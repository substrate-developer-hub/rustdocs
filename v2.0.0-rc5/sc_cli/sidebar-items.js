initSidebarItems({"constant":[["DEFAULT_EXECUTION_BLOCK_CONSTRUCTION","Default value for the `--execution-block-construction` parameter."],["DEFAULT_EXECUTION_IMPORT_BLOCK","Default value for the `--execution-import-block` parameter."],["DEFAULT_EXECUTION_IMPORT_BLOCK_VALIDATOR","Default value for the `--execution-import-block` parameter when the node is a validator."],["DEFAULT_EXECUTION_OFFCHAIN_WORKER","Default value for the `--execution-offchain-worker` parameter."],["DEFAULT_EXECUTION_OTHER","Default value for the `--execution-other` parameter."],["DEFAULT_EXECUTION_SYNCING","Default value for the `--execution-syncing` parameter."]],"enum":[["Database","Database backend"],["Error","Error type for the CLI."],["ExecutionStrategy","How to execute blocks"],["NodeKeyType",""],["OffchainWorkerEnabled","Whether off-chain workers are enabled."],["Role","Role of the local node."],["RpcMethods","Available RPC methods."],["Subcommand","All core commands that are provided by default."],["TracingReceiver",""],["WasmExecutionMethod","How to execute Wasm runtime code"]],"fn":[["build_runtime","Build a tokio runtime with all features"],["generate_node_name","Generate a valid random name for the node"],["init_logger","Initialize the logger"],["secret_string_from_str","Parse a sercret string, returning a displayable error."]],"macro":[["substrate_cli_subcommands","Macro that helps implement CliConfiguration on an enum of subcommand automatically"]],"struct":[["BlockNumber","Wrapper type of `String` that holds an unsigned integer of arbitrary size, formatted as a decimal."],["BlockNumberOrHash","Wrapper type that is either a `Hash` or the number of a `Block`."],["BuildSpecCmd","The `build-spec` command used to build a specification."],["CheckBlockCmd","The `check-block` command used to validate blocks."],["DatabaseParams","Parameters for block import."],["ExecutionStrategiesParams","Execution strategies parameters."],["ExportBlocksCmd","The `export-blocks` command used to export blocks."],["ExportStateCmd","The `export-state` command used to export the state of a given block into a chain spec."],["ImportBlocksCmd","The `import-blocks` command used to import blocks."],["ImportParams","Parameters for block import."],["KeystoreParams","Parameters of the keystore"],["NetworkParams","Parameters used to create the network configuration."],["NodeKeyParams","Parameters used to create the `NodeKeyConfig`, which determines the keypair used for libp2p networking."],["OffchainWorkerParams","Offchain worker related parameters."],["PruningParams","Parameters to define the pruning mode"],["PurgeChainCmd","The `purge-chain` command used to remove the whole chain."],["RevertCmd","The `revert` command used revert the chain to a previous state."],["RunCmd","The `run` command used to run a node."],["Runner","A Substrate CLI runtime that can be used to run a node or a command"],["RuntimeVersion","Runtime version. This should not be thought of as classic Semver (major/minor/tiny). This triplet have different semantics and mis-interpretation could cause problems. In particular: bug fixes should result in an increment of `spec_version` and possibly `authoring_version`, absolutely not `impl_version` since they change the semantics of the runtime."],["SharedParams","Shared parameters used by all `CoreParams`."],["TransactionPoolParams","Parameters used to create the pool configuration."]],"trait":[["ChainSpec","Common interface of a chain specification."],["CliConfiguration","A trait that allows converting an object to a Configuration"],["SubstrateCli","Substrate client CLI"]],"type":[["Result","Result type alias for the CLI."]]});