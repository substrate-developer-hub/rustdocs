(function() {var implementors = {};
implementors["futures_codec"] = [{"text":"impl&lt;T, U&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_codec/struct.Framed.html\" title=\"struct futures_codec::Framed\">Framed</a>&lt;T, U&gt;","synthetic":false,"types":["futures_codec::framed::Framed"]},{"text":"impl&lt;T, E&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_codec/struct.FramedWrite.html\" title=\"struct futures_codec::FramedWrite\">FramedWrite</a>&lt;T, E&gt;","synthetic":false,"types":["futures_codec::framed_write::FramedWrite"]}];
implementors["futures_diagnose"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_diagnose/struct.DiagnoseFuture.html\" title=\"struct futures_diagnose::DiagnoseFuture\">DiagnoseFuture</a>&lt;T&gt;","synthetic":false,"types":["futures_diagnose::fut_with_diag::DiagnoseFuture"]}];
implementors["futures_util"] = [{"text":"impl&lt;Fut&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.Fuse.html\" title=\"struct futures_util::future::Fuse\">Fuse</a>&lt;Fut&gt;","synthetic":false,"types":["futures_util::future::future::fuse::Fuse"]},{"text":"impl&lt;F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.Flatten.html\" title=\"struct futures_util::future::Flatten\">Flatten</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>,&nbsp;</span>","synthetic":false,"types":["futures_util::future::future::Flatten"]},{"text":"impl&lt;F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.FlattenStream.html\" title=\"struct futures_util::future::FlattenStream\">FlattenStream</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>,&nbsp;</span>","synthetic":false,"types":["futures_util::future::future::FlattenStream"]},{"text":"impl&lt;Fut, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.Map.html\" title=\"struct futures_util::future::Map\">Map</a>&lt;Fut, F&gt;","synthetic":false,"types":["futures_util::future::future::Map"]},{"text":"impl&lt;F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.IntoStream.html\" title=\"struct futures_util::future::IntoStream\">IntoStream</a>&lt;F&gt;","synthetic":false,"types":["futures_util::future::future::IntoStream"]},{"text":"impl&lt;Fut, T&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.MapInto.html\" title=\"struct futures_util::future::MapInto\">MapInto</a>&lt;Fut, T&gt;","synthetic":false,"types":["futures_util::future::future::MapInto"]},{"text":"impl&lt;Fut1, Fut2, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.Then.html\" title=\"struct futures_util::future::Then\">Then</a>&lt;Fut1, Fut2, F&gt;","synthetic":false,"types":["futures_util::future::future::Then"]},{"text":"impl&lt;Fut, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.Inspect.html\" title=\"struct futures_util::future::Inspect\">Inspect</a>&lt;Fut, F&gt;","synthetic":false,"types":["futures_util::future::future::Inspect"]},{"text":"impl&lt;Fut&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.NeverError.html\" title=\"struct futures_util::future::NeverError\">NeverError</a>&lt;Fut&gt;","synthetic":false,"types":["futures_util::future::future::NeverError"]},{"text":"impl&lt;Fut&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.UnitError.html\" title=\"struct futures_util::future::UnitError\">UnitError</a>&lt;Fut&gt;","synthetic":false,"types":["futures_util::future::future::UnitError"]},{"text":"impl&lt;Fut&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.CatchUnwind.html\" title=\"struct futures_util::future::CatchUnwind\">CatchUnwind</a>&lt;Fut&gt;","synthetic":false,"types":["futures_util::future::future::catch_unwind::CatchUnwind"]},{"text":"impl&lt;Fut:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.Remote.html\" title=\"struct futures_util::future::Remote\">Remote</a>&lt;Fut&gt;","synthetic":false,"types":["futures_util::future::future::remote_handle::Remote"]},{"text":"impl&lt;Fut&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.IntoFuture.html\" title=\"struct futures_util::future::IntoFuture\">IntoFuture</a>&lt;Fut&gt;","synthetic":false,"types":["futures_util::future::try_future::into_future::IntoFuture"]},{"text":"impl&lt;Fut1, Fut2&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.TryFlatten.html\" title=\"struct futures_util::future::TryFlatten\">TryFlatten</a>&lt;Fut1, Fut2&gt;","synthetic":false,"types":["futures_util::future::try_future::TryFlatten"]},{"text":"impl&lt;Fut&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.TryFlattenStream.html\" title=\"struct futures_util::future::TryFlattenStream\">TryFlattenStream</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>,&nbsp;</span>","synthetic":false,"types":["futures_util::future::try_future::TryFlattenStream"]},{"text":"impl&lt;Fut, Si&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.FlattenSink.html\" title=\"struct futures_util::future::FlattenSink\">FlattenSink</a>&lt;Fut, Si&gt;","synthetic":false,"types":["futures_util::future::try_future::FlattenSink"]},{"text":"impl&lt;Fut1, Fut2, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.AndThen.html\" title=\"struct futures_util::future::AndThen\">AndThen</a>&lt;Fut1, Fut2, F&gt;","synthetic":false,"types":["futures_util::future::try_future::AndThen"]},{"text":"impl&lt;Fut1, Fut2, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.OrElse.html\" title=\"struct futures_util::future::OrElse\">OrElse</a>&lt;Fut1, Fut2, F&gt;","synthetic":false,"types":["futures_util::future::try_future::OrElse"]},{"text":"impl&lt;Fut, E&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.ErrInto.html\" title=\"struct futures_util::future::ErrInto\">ErrInto</a>&lt;Fut, E&gt;","synthetic":false,"types":["futures_util::future::try_future::ErrInto"]},{"text":"impl&lt;Fut, E&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.OkInto.html\" title=\"struct futures_util::future::OkInto\">OkInto</a>&lt;Fut, E&gt;","synthetic":false,"types":["futures_util::future::try_future::OkInto"]},{"text":"impl&lt;Fut, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.InspectOk.html\" title=\"struct futures_util::future::InspectOk\">InspectOk</a>&lt;Fut, F&gt;","synthetic":false,"types":["futures_util::future::try_future::InspectOk"]},{"text":"impl&lt;Fut, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.InspectErr.html\" title=\"struct futures_util::future::InspectErr\">InspectErr</a>&lt;Fut, F&gt;","synthetic":false,"types":["futures_util::future::try_future::InspectErr"]},{"text":"impl&lt;Fut, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.MapOk.html\" title=\"struct futures_util::future::MapOk\">MapOk</a>&lt;Fut, F&gt;","synthetic":false,"types":["futures_util::future::try_future::MapOk"]},{"text":"impl&lt;Fut, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.MapErr.html\" title=\"struct futures_util::future::MapErr\">MapErr</a>&lt;Fut, F&gt;","synthetic":false,"types":["futures_util::future::try_future::MapErr"]},{"text":"impl&lt;Fut, F, G&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.MapOkOrElse.html\" title=\"struct futures_util::future::MapOkOrElse\">MapOkOrElse</a>&lt;Fut, F, G&gt;","synthetic":false,"types":["futures_util::future::try_future::MapOkOrElse"]},{"text":"impl&lt;Fut, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.UnwrapOrElse.html\" title=\"struct futures_util::future::UnwrapOrElse\">UnwrapOrElse</a>&lt;Fut, F&gt;","synthetic":false,"types":["futures_util::future::try_future::UnwrapOrElse"]},{"text":"impl&lt;Fut:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"enum\" href=\"futures_util/future/enum.MaybeDone.html\" title=\"enum futures_util::future::MaybeDone\">MaybeDone</a>&lt;Fut&gt;","synthetic":false,"types":["futures_util::future::maybe_done::MaybeDone"]},{"text":"impl&lt;Fut:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"enum\" href=\"futures_util/future/enum.TryMaybeDone.html\" title=\"enum futures_util::future::TryMaybeDone\">TryMaybeDone</a>&lt;Fut&gt;","synthetic":false,"types":["futures_util::future::try_maybe_done::TryMaybeDone"]},{"text":"impl&lt;F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.OptionFuture.html\" title=\"struct futures_util::future::OptionFuture\">OptionFuture</a>&lt;F&gt;","synthetic":false,"types":["futures_util::future::option::OptionFuture"]},{"text":"impl&lt;Fut1:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>, Fut2:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.Join.html\" title=\"struct futures_util::future::Join\">Join</a>&lt;Fut1, Fut2&gt;","synthetic":false,"types":["futures_util::future::join::Join"]},{"text":"impl&lt;Fut1:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>, Fut2:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>, Fut3:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.Join3.html\" title=\"struct futures_util::future::Join3\">Join3</a>&lt;Fut1, Fut2, Fut3&gt;","synthetic":false,"types":["futures_util::future::join::Join3"]},{"text":"impl&lt;Fut1:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>, Fut2:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>, Fut3:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>, Fut4:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.Join4.html\" title=\"struct futures_util::future::Join4\">Join4</a>&lt;Fut1, Fut2, Fut3, Fut4&gt;","synthetic":false,"types":["futures_util::future::join::Join4"]},{"text":"impl&lt;Fut1:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>, Fut2:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>, Fut3:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>, Fut4:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>, Fut5:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.Join5.html\" title=\"struct futures_util::future::Join5\">Join5</a>&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt;","synthetic":false,"types":["futures_util::future::join::Join5"]},{"text":"impl&lt;Fut1:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>, Fut2:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin.html\" title=\"struct futures_util::future::TryJoin\">TryJoin</a>&lt;Fut1, Fut2&gt;","synthetic":false,"types":["futures_util::future::try_join::TryJoin"]},{"text":"impl&lt;Fut1:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>, Fut2:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>, Fut3:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin3.html\" title=\"struct futures_util::future::TryJoin3\">TryJoin3</a>&lt;Fut1, Fut2, Fut3&gt;","synthetic":false,"types":["futures_util::future::try_join::TryJoin3"]},{"text":"impl&lt;Fut1:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>, Fut2:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>, Fut3:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>, Fut4:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin4.html\" title=\"struct futures_util::future::TryJoin4\">TryJoin4</a>&lt;Fut1, Fut2, Fut3, Fut4&gt;","synthetic":false,"types":["futures_util::future::try_join::TryJoin4"]},{"text":"impl&lt;Fut1:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>, Fut2:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>, Fut3:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>, Fut4:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>, Fut5:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin5.html\" title=\"struct futures_util::future::TryJoin5\">TryJoin5</a>&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt;","synthetic":false,"types":["futures_util::future::try_join::TryJoin5"]},{"text":"impl&lt;A, B&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"enum\" href=\"futures_util/future/enum.Either.html\" title=\"enum futures_util::future::Either\">Either</a>&lt;A, B&gt;","synthetic":false,"types":["futures_util::future::either::Either"]},{"text":"impl&lt;Fut&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/future/struct.Abortable.html\" title=\"struct futures_util::future::Abortable\">Abortable</a>&lt;Fut&gt;","synthetic":false,"types":["futures_util::future::abortable::Abortable"]},{"text":"impl&lt;St1, St2&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.Chain.html\" title=\"struct futures_util::stream::Chain\">Chain</a>&lt;St1, St2&gt;","synthetic":false,"types":["futures_util::stream::stream::chain::Chain"]},{"text":"impl&lt;St, C&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.Collect.html\" title=\"struct futures_util::stream::Collect\">Collect</a>&lt;St, C&gt;","synthetic":false,"types":["futures_util::stream::stream::collect::Collect"]},{"text":"impl&lt;St:&nbsp;<a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.Concat.html\" title=\"struct futures_util::stream::Concat\">Concat</a>&lt;St&gt;","synthetic":false,"types":["futures_util::stream::stream::concat::Concat"]},{"text":"impl&lt;St&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.Enumerate.html\" title=\"struct futures_util::stream::Enumerate\">Enumerate</a>&lt;St&gt;","synthetic":false,"types":["futures_util::stream::stream::enumerate::Enumerate"]},{"text":"impl&lt;St, Fut, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.Filter.html\" title=\"struct futures_util::stream::Filter\">Filter</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::filter::Filter"]},{"text":"impl&lt;St, Fut, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.FilterMap.html\" title=\"struct futures_util::stream::FilterMap\">FilterMap</a>&lt;St, Fut, F&gt;","synthetic":false,"types":["futures_util::stream::stream::filter_map::FilterMap"]},{"text":"impl&lt;St&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.Flatten.html\" title=\"struct futures_util::stream::Flatten\">Flatten</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::Flatten"]},{"text":"impl&lt;St, Fut, T, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.Fold.html\" title=\"struct futures_util::stream::Fold\">Fold</a>&lt;St, Fut, T, F&gt;","synthetic":false,"types":["futures_util::stream::stream::fold::Fold"]},{"text":"impl&lt;St, Si&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.Forward.html\" title=\"struct futures_util::stream::Forward\">Forward</a>&lt;St, Si&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::Forward"]},{"text":"impl&lt;St, Fut, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.ForEach.html\" title=\"struct futures_util::stream::ForEach\">ForEach</a>&lt;St, Fut, F&gt;","synthetic":false,"types":["futures_util::stream::stream::for_each::ForEach"]},{"text":"impl&lt;St&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.Fuse.html\" title=\"struct futures_util::stream::Fuse\">Fuse</a>&lt;St&gt;","synthetic":false,"types":["futures_util::stream::stream::fuse::Fuse"]},{"text":"impl&lt;St, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.Inspect.html\" title=\"struct futures_util::stream::Inspect\">Inspect</a>&lt;St, F&gt;","synthetic":false,"types":["futures_util::stream::stream::Inspect"]},{"text":"impl&lt;St, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.Map.html\" title=\"struct futures_util::stream::Map\">Map</a>&lt;St, F&gt;","synthetic":false,"types":["futures_util::stream::stream::map::Map"]},{"text":"impl&lt;St, U, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.FlatMap.html\" title=\"struct futures_util::stream::FlatMap\">FlatMap</a>&lt;St, U, F&gt;","synthetic":false,"types":["futures_util::stream::stream::FlatMap"]},{"text":"impl&lt;St:&nbsp;<a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.Peekable.html\" title=\"struct futures_util::stream::Peekable\">Peekable</a>&lt;St&gt;","synthetic":false,"types":["futures_util::stream::stream::peek::Peekable"]},{"text":"impl&lt;'a, St:&nbsp;<a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.Peek.html\" title=\"struct futures_util::stream::Peek\">Peek</a>&lt;'a, St&gt;","synthetic":false,"types":["futures_util::stream::stream::peek::Peek"]},{"text":"impl&lt;St&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.Skip.html\" title=\"struct futures_util::stream::Skip\">Skip</a>&lt;St&gt;","synthetic":false,"types":["futures_util::stream::stream::skip::Skip"]},{"text":"impl&lt;St, Fut, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.SkipWhile.html\" title=\"struct futures_util::stream::SkipWhile\">SkipWhile</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::skip_while::SkipWhile"]},{"text":"impl&lt;St&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.Take.html\" title=\"struct futures_util::stream::Take\">Take</a>&lt;St&gt;","synthetic":false,"types":["futures_util::stream::stream::take::Take"]},{"text":"impl&lt;St:&nbsp;<a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>, Fut, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.TakeWhile.html\" title=\"struct futures_util::stream::TakeWhile\">TakeWhile</a>&lt;St, Fut, F&gt;","synthetic":false,"types":["futures_util::stream::stream::take_while::TakeWhile"]},{"text":"impl&lt;St:&nbsp;<a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>, Fut:&nbsp;<a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.TakeUntil.html\" title=\"struct futures_util::stream::TakeUntil\">TakeUntil</a>&lt;St, Fut&gt;","synthetic":false,"types":["futures_util::stream::stream::take_until::TakeUntil"]},{"text":"impl&lt;St, Fut, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.Then.html\" title=\"struct futures_util::stream::Then\">Then</a>&lt;St, Fut, F&gt;","synthetic":false,"types":["futures_util::stream::stream::then::Then"]},{"text":"impl&lt;St1:&nbsp;<a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>, St2:&nbsp;<a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.Zip.html\" title=\"struct futures_util::stream::Zip\">Zip</a>&lt;St1, St2&gt;","synthetic":false,"types":["futures_util::stream::stream::zip::Zip"]},{"text":"impl&lt;St:&nbsp;<a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.Chunks.html\" title=\"struct futures_util::stream::Chunks\">Chunks</a>&lt;St&gt;","synthetic":false,"types":["futures_util::stream::stream::chunks::Chunks"]},{"text":"impl&lt;St:&nbsp;<a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.ReadyChunks.html\" title=\"struct futures_util::stream::ReadyChunks\">ReadyChunks</a>&lt;St&gt;","synthetic":false,"types":["futures_util::stream::stream::ready_chunks::ReadyChunks"]},{"text":"impl&lt;St:&nbsp;<a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>, S, Fut, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.Scan.html\" title=\"struct futures_util::stream::Scan\">Scan</a>&lt;St, S, Fut, F&gt;","synthetic":false,"types":["futures_util::stream::stream::scan::Scan"]},{"text":"impl&lt;St&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.BufferUnordered.html\" title=\"struct futures_util::stream::BufferUnordered\">BufferUnordered</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::buffer_unordered::BufferUnordered"]},{"text":"impl&lt;St&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.Buffered.html\" title=\"struct futures_util::stream::Buffered\">Buffered</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;St::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::stream::buffered::Buffered"]},{"text":"impl&lt;St, Fut, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.ForEachConcurrent.html\" title=\"struct futures_util::stream::ForEachConcurrent\">ForEachConcurrent</a>&lt;St, Fut, F&gt;","synthetic":false,"types":["futures_util::stream::stream::for_each_concurrent::ForEachConcurrent"]},{"text":"impl&lt;St&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.CatchUnwind.html\" title=\"struct futures_util::stream::CatchUnwind\">CatchUnwind</a>&lt;St&gt;","synthetic":false,"types":["futures_util::stream::stream::catch_unwind::CatchUnwind"]},{"text":"impl&lt;St, Fut, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.AndThen.html\" title=\"struct futures_util::stream::AndThen\">AndThen</a>&lt;St, Fut, F&gt;","synthetic":false,"types":["futures_util::stream::try_stream::and_then::AndThen"]},{"text":"impl&lt;St, E&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.ErrInto.html\" title=\"struct futures_util::stream::ErrInto\">ErrInto</a>&lt;St, E&gt;","synthetic":false,"types":["futures_util::stream::try_stream::ErrInto"]},{"text":"impl&lt;St, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.InspectOk.html\" title=\"struct futures_util::stream::InspectOk\">InspectOk</a>&lt;St, F&gt;","synthetic":false,"types":["futures_util::stream::try_stream::InspectOk"]},{"text":"impl&lt;St, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.InspectErr.html\" title=\"struct futures_util::stream::InspectErr\">InspectErr</a>&lt;St, F&gt;","synthetic":false,"types":["futures_util::stream::try_stream::InspectErr"]},{"text":"impl&lt;St&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.IntoStream.html\" title=\"struct futures_util::stream::IntoStream\">IntoStream</a>&lt;St&gt;","synthetic":false,"types":["futures_util::stream::try_stream::into_stream::IntoStream"]},{"text":"impl&lt;St, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.MapOk.html\" title=\"struct futures_util::stream::MapOk\">MapOk</a>&lt;St, F&gt;","synthetic":false,"types":["futures_util::stream::try_stream::MapOk"]},{"text":"impl&lt;St, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.MapErr.html\" title=\"struct futures_util::stream::MapErr\">MapErr</a>&lt;St, F&gt;","synthetic":false,"types":["futures_util::stream::try_stream::MapErr"]},{"text":"impl&lt;St, Fut, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.OrElse.html\" title=\"struct futures_util::stream::OrElse\">OrElse</a>&lt;St, Fut, F&gt;","synthetic":false,"types":["futures_util::stream::try_stream::or_else::OrElse"]},{"text":"impl&lt;St, Fut, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.TryForEach.html\" title=\"struct futures_util::stream::TryForEach\">TryForEach</a>&lt;St, Fut, F&gt;","synthetic":false,"types":["futures_util::stream::try_stream::try_for_each::TryForEach"]},{"text":"impl&lt;St, Fut, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.TryFilter.html\" title=\"struct futures_util::stream::TryFilter\">TryFilter</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::try_stream::try_filter::TryFilter"]},{"text":"impl&lt;St, Fut, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.TryFilterMap.html\" title=\"struct futures_util::stream::TryFilterMap\">TryFilterMap</a>&lt;St, Fut, F&gt;","synthetic":false,"types":["futures_util::stream::try_stream::try_filter_map::TryFilterMap"]},{"text":"impl&lt;St&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.TryFlatten.html\" title=\"struct futures_util::stream::TryFlatten\">TryFlatten</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::try_stream::try_flatten::TryFlatten"]},{"text":"impl&lt;St, C&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.TryCollect.html\" title=\"struct futures_util::stream::TryCollect\">TryCollect</a>&lt;St, C&gt;","synthetic":false,"types":["futures_util::stream::try_stream::try_collect::TryCollect"]},{"text":"impl&lt;St:&nbsp;<a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.TryConcat.html\" title=\"struct futures_util::stream::TryConcat\">TryConcat</a>&lt;St&gt;","synthetic":false,"types":["futures_util::stream::try_stream::try_concat::TryConcat"]},{"text":"impl&lt;St, Fut, T, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.TryFold.html\" title=\"struct futures_util::stream::TryFold\">TryFold</a>&lt;St, Fut, T, F&gt;","synthetic":false,"types":["futures_util::stream::try_stream::try_fold::TryFold"]},{"text":"impl&lt;T, F, Fut&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.TryUnfold.html\" title=\"struct futures_util::stream::TryUnfold\">TryUnfold</a>&lt;T, F, Fut&gt;","synthetic":false,"types":["futures_util::stream::try_stream::try_unfold::TryUnfold"]},{"text":"impl&lt;St, Fut, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.TrySkipWhile.html\" title=\"struct futures_util::stream::TrySkipWhile\">TrySkipWhile</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::try_stream::try_skip_while::TrySkipWhile"]},{"text":"impl&lt;St&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.TryBufferUnordered.html\" title=\"struct futures_util::stream::TryBufferUnordered\">TryBufferUnordered</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>,&nbsp;</span>","synthetic":false,"types":["futures_util::stream::try_stream::try_buffer_unordered::TryBufferUnordered"]},{"text":"impl&lt;St, Fut, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.TryForEachConcurrent.html\" title=\"struct futures_util::stream::TryForEachConcurrent\">TryForEachConcurrent</a>&lt;St, Fut, F&gt;","synthetic":false,"types":["futures_util::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent"]},{"text":"impl&lt;Fut&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.Once.html\" title=\"struct futures_util::stream::Once\">Once</a>&lt;Fut&gt;","synthetic":false,"types":["futures_util::stream::once::Once"]},{"text":"impl&lt;St1, St2&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.Select.html\" title=\"struct futures_util::stream::Select\">Select</a>&lt;St1, St2&gt;","synthetic":false,"types":["futures_util::stream::select::Select"]},{"text":"impl&lt;T, F, Fut&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/stream/struct.Unfold.html\" title=\"struct futures_util::stream::Unfold\">Unfold</a>&lt;T, F, Fut&gt;","synthetic":false,"types":["futures_util::stream::unfold::Unfold"]},{"text":"impl&lt;Si1, Si2&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/sink/struct.Fanout.html\" title=\"struct futures_util::sink::Fanout\">Fanout</a>&lt;Si1, Si2&gt;","synthetic":false,"types":["futures_util::sink::fanout::Fanout"]},{"text":"impl&lt;Si:&nbsp;<a class=\"trait\" href=\"futures_util/sink/trait.Sink.html\" title=\"trait futures_util::sink::Sink\">Sink</a>&lt;Item&gt;, Item, E&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/sink/struct.SinkErrInto.html\" title=\"struct futures_util::sink::SinkErrInto\">SinkErrInto</a>&lt;Si, Item, E&gt;","synthetic":false,"types":["futures_util::sink::err_into::SinkErrInto"]},{"text":"impl&lt;Si, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/sink/struct.SinkMapErr.html\" title=\"struct futures_util::sink::SinkMapErr\">SinkMapErr</a>&lt;Si, F&gt;","synthetic":false,"types":["futures_util::sink::map_err::SinkMapErr"]},{"text":"impl&lt;Si, Item, U, Fut, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/sink/struct.With.html\" title=\"struct futures_util::sink::With\">With</a>&lt;Si, Item, U, Fut, F&gt;","synthetic":false,"types":["futures_util::sink::with::With"]},{"text":"impl&lt;Si, Item, U, St, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/sink/struct.WithFlatMap.html\" title=\"struct futures_util::sink::WithFlatMap\">WithFlatMap</a>&lt;Si, Item, U, St, F&gt;","synthetic":false,"types":["futures_util::sink::with_flat_map::WithFlatMap"]},{"text":"impl&lt;Si, Item&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/sink/struct.Buffer.html\" title=\"struct futures_util::sink::Buffer\">Buffer</a>&lt;Si, Item&gt;","synthetic":false,"types":["futures_util::sink::buffer::Buffer"]},{"text":"impl&lt;R&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/io/struct.BufReader.html\" title=\"struct futures_util::io::BufReader\">BufReader</a>&lt;R&gt;","synthetic":false,"types":["futures_util::io::buf_reader::BufReader"]},{"text":"impl&lt;W&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/io/struct.BufWriter.html\" title=\"struct futures_util::io::BufWriter\">BufWriter</a>&lt;W&gt;","synthetic":false,"types":["futures_util::io::buf_writer::BufWriter"]},{"text":"impl&lt;T, U&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/io/struct.Chain.html\" title=\"struct futures_util::io::Chain\">Chain</a>&lt;T, U&gt;","synthetic":false,"types":["futures_util::io::chain::Chain"]},{"text":"impl&lt;'a, R, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/io/struct.Copy.html\" title=\"struct futures_util::io::Copy\">Copy</a>&lt;'a, R, W&gt;","synthetic":false,"types":["futures_util::io::copy::Copy"]},{"text":"impl&lt;'a, R, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/io/struct.CopyBuf.html\" title=\"struct futures_util::io::CopyBuf\">CopyBuf</a>&lt;'a, R, W&gt;","synthetic":false,"types":["futures_util::io::copy_buf::CopyBuf"]},{"text":"impl&lt;W, Item&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/io/struct.IntoSink.html\" title=\"struct futures_util::io::IntoSink\">IntoSink</a>&lt;W, Item&gt;","synthetic":false,"types":["futures_util::io::into_sink::IntoSink"]},{"text":"impl&lt;R&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/io/struct.Lines.html\" title=\"struct futures_util::io::Lines\">Lines</a>&lt;R&gt;","synthetic":false,"types":["futures_util::io::lines::Lines"]},{"text":"impl&lt;R&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"futures_util/io/struct.Take.html\" title=\"struct futures_util::io::Take\">Take</a>&lt;R&gt;","synthetic":false,"types":["futures_util::io::take::Take"]}];
implementors["hyper"] = [{"text":"impl&lt;I, F, E&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"hyper/server/conn/struct.Connecting.html\" title=\"struct hyper::server::conn::Connecting\">Connecting</a>&lt;I, F, E&gt;","synthetic":false,"types":["hyper::server::conn::Connecting"]},{"text":"impl&lt;T, S, E&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"hyper/server/conn/struct.Connection.html\" title=\"struct hyper::server::conn::Connection\">Connection</a>&lt;T, S, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: HttpService&lt;<a class=\"struct\" href=\"hyper/struct.Body.html\" title=\"struct hyper::Body\">Body</a>&gt;,&nbsp;</span>","synthetic":false,"types":["hyper::server::conn::Connection"]},{"text":"impl&lt;I, S, E&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"hyper/server/struct.Server.html\" title=\"struct hyper::server::Server\">Server</a>&lt;I, S, E&gt;","synthetic":false,"types":["hyper::server::Server"]}];
implementors["libp2p"] = [{"text":"impl&lt;TInner&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"libp2p/bandwidth/struct.BandwidthListener.html\" title=\"struct libp2p::bandwidth::BandwidthListener\">BandwidthListener</a>&lt;TInner&gt;","synthetic":false,"types":["libp2p::bandwidth::BandwidthListener"]},{"text":"impl&lt;TInner&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"libp2p/bandwidth/struct.BandwidthFuture.html\" title=\"struct libp2p::bandwidth::BandwidthFuture\">BandwidthFuture</a>&lt;TInner&gt;","synthetic":false,"types":["libp2p::bandwidth::BandwidthFuture"]},{"text":"impl&lt;TInner&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"libp2p/bandwidth/struct.BandwidthConnecLogging.html\" title=\"struct libp2p::bandwidth::BandwidthConnecLogging\">BandwidthConnecLogging</a>&lt;TInner&gt;","synthetic":false,"types":["libp2p::bandwidth::BandwidthConnecLogging"]}];
implementors["libp2p_core"] = [{"text":"impl&lt;A, B&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"enum\" href=\"libp2p_core/either/enum.EitherOutput.html\" title=\"enum libp2p_core::either::EitherOutput\">EitherOutput</a>&lt;A, B&gt;","synthetic":false,"types":["libp2p_core::either::EitherOutput"]},{"text":"impl&lt;A, B&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"enum\" href=\"libp2p_core/either/enum.EitherListenStream.html\" title=\"enum libp2p_core::either::EitherListenStream\">EitherListenStream</a>&lt;A, B&gt;","synthetic":false,"types":["libp2p_core::either::EitherListenStream"]},{"text":"impl&lt;A, B&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"enum\" href=\"libp2p_core/either/enum.EitherFuture.html\" title=\"enum libp2p_core::either::EitherFuture\">EitherFuture</a>&lt;A, B&gt;","synthetic":false,"types":["libp2p_core::either::EitherFuture"]},{"text":"impl&lt;A, B&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"enum\" href=\"libp2p_core/either/enum.EitherFuture2.html\" title=\"enum libp2p_core::either::EitherFuture2\">EitherFuture2</a>&lt;A, B&gt;","synthetic":false,"types":["libp2p_core::either::EitherFuture2"]},{"text":"impl&lt;TListener, TMap&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"libp2p_core/transport/and_then/struct.AndThenStream.html\" title=\"struct libp2p_core::transport::and_then::AndThenStream\">AndThenStream</a>&lt;TListener, TMap&gt;","synthetic":false,"types":["libp2p_core::transport::and_then::AndThenStream"]},{"text":"impl&lt;T, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"libp2p_core/transport/map/struct.MapStream.html\" title=\"struct libp2p_core::transport::map::MapStream\">MapStream</a>&lt;T, F&gt;","synthetic":false,"types":["libp2p_core::transport::map::MapStream"]},{"text":"impl&lt;T, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"libp2p_core/transport/map/struct.MapFuture.html\" title=\"struct libp2p_core::transport::map::MapFuture\">MapFuture</a>&lt;T, F&gt;","synthetic":false,"types":["libp2p_core::transport::map::MapFuture"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"libp2p_core/transport/trait.Transport.html\" title=\"trait libp2p_core::transport::Transport\">Transport</a>, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"libp2p_core/transport/map_err/struct.MapErrListener.html\" title=\"struct libp2p_core::transport::map_err::MapErrListener\">MapErrListener</a>&lt;T, F&gt;","synthetic":false,"types":["libp2p_core::transport::map_err::MapErrListener"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"libp2p_core/transport/trait.Transport.html\" title=\"trait libp2p_core::transport::Transport\">Transport</a>, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"libp2p_core/transport/map_err/struct.MapErrListenerUpgrade.html\" title=\"struct libp2p_core::transport::map_err::MapErrListenerUpgrade\">MapErrListenerUpgrade</a>&lt;T, F&gt;","synthetic":false,"types":["libp2p_core::transport::map_err::MapErrListenerUpgrade"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"libp2p_core/transport/trait.Transport.html\" title=\"trait libp2p_core::transport::Transport\">Transport</a>, F&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"libp2p_core/transport/map_err/struct.MapErrDial.html\" title=\"struct libp2p_core::transport::map_err::MapErrDial\">MapErrDial</a>&lt;T, F&gt;","synthetic":false,"types":["libp2p_core::transport::map_err::MapErrDial"]},{"text":"impl&lt;InnerStream&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"libp2p_core/transport/timeout/struct.TimeoutListener.html\" title=\"struct libp2p_core::transport::timeout::TimeoutListener\">TimeoutListener</a>&lt;InnerStream&gt;","synthetic":false,"types":["libp2p_core::transport::timeout::TimeoutListener"]},{"text":"impl&lt;InnerFut&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"libp2p_core/transport/timeout/struct.Timeout.html\" title=\"struct libp2p_core::transport::timeout::Timeout\">Timeout</a>&lt;InnerFut&gt;","synthetic":false,"types":["libp2p_core::transport::timeout::Timeout"]},{"text":"impl&lt;C, U&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"libp2p_core/transport/upgrade/struct.Authenticate.html\" title=\"struct libp2p_core::transport::upgrade::Authenticate\">Authenticate</a>&lt;C, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncWrite.html\" title=\"trait futures_io::if_std::AsyncWrite\">AsyncWrite</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: <a class=\"trait\" href=\"libp2p_core/upgrade/trait.InboundUpgrade.html\" title=\"trait libp2p_core::upgrade::InboundUpgrade\">InboundUpgrade</a>&lt;<a class=\"type\" href=\"libp2p_core/type.Negotiated.html\" title=\"type libp2p_core::Negotiated\">Negotiated</a>&lt;C&gt;&gt; + <a class=\"trait\" href=\"libp2p_core/upgrade/trait.OutboundUpgrade.html\" title=\"trait libp2p_core::upgrade::OutboundUpgrade\">OutboundUpgrade</a>&lt;<a class=\"type\" href=\"libp2p_core/type.Negotiated.html\" title=\"type libp2p_core::Negotiated\">Negotiated</a>&lt;C&gt;&gt;,&nbsp;</span>","synthetic":false,"types":["libp2p_core::transport::upgrade::Authenticate"]},{"text":"impl&lt;C, U, I&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"libp2p_core/transport/upgrade/struct.Multiplex.html\" title=\"struct libp2p_core::transport::upgrade::Multiplex\">Multiplex</a>&lt;C, U, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncWrite.html\" title=\"trait futures_io::if_std::AsyncWrite\">AsyncWrite</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: <a class=\"trait\" href=\"libp2p_core/upgrade/trait.InboundUpgrade.html\" title=\"trait libp2p_core::upgrade::InboundUpgrade\">InboundUpgrade</a>&lt;<a class=\"type\" href=\"libp2p_core/type.Negotiated.html\" title=\"type libp2p_core::Negotiated\">Negotiated</a>&lt;C&gt;&gt; + <a class=\"trait\" href=\"libp2p_core/upgrade/trait.OutboundUpgrade.html\" title=\"trait libp2p_core::upgrade::OutboundUpgrade\">OutboundUpgrade</a>&lt;<a class=\"type\" href=\"libp2p_core/type.Negotiated.html\" title=\"type libp2p_core::Negotiated\">Negotiated</a>&lt;C&gt;&gt;,&nbsp;</span>","synthetic":false,"types":["libp2p_core::transport::upgrade::Multiplex"]}];
implementors["libp2p_pnet"] = [{"text":"impl&lt;S&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"libp2p_pnet/struct.PnetOutput.html\" title=\"struct libp2p_pnet::PnetOutput\">PnetOutput</a>&lt;S&gt;","synthetic":false,"types":["libp2p_pnet::PnetOutput"]}];
implementors["multistream_select"] = [{"text":"impl&lt;R, N&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"multistream_select/struct.ListenerSelectFuture.html\" title=\"struct multistream_select::ListenerSelectFuture\">ListenerSelectFuture</a>&lt;R, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncWrite.html\" title=\"trait futures_io::if_std::AsyncWrite\">AsyncWrite</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">]</a>&gt;,&nbsp;</span>","synthetic":false,"types":["multistream_select::listener_select::ListenerSelectFuture"]},{"text":"impl&lt;TInner&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"multistream_select/struct.Negotiated.html\" title=\"struct multistream_select::Negotiated\">Negotiated</a>&lt;TInner&gt;","synthetic":false,"types":["multistream_select::negotiated::Negotiated"]}];
implementors["rw_stream_sink"] = [{"text":"impl&lt;S:&nbsp;<a class=\"trait\" href=\"futures_core/stream/trait.TryStream.html\" title=\"trait futures_core::stream::TryStream\">TryStream</a>&gt; <a class=\"trait\" href=\"pin_project/trait.UnsafeUnpin.html\" title=\"trait pin_project::UnsafeUnpin\">UnsafeUnpin</a> for <a class=\"struct\" href=\"rw_stream_sink/struct.RwStreamSink.html\" title=\"struct rw_stream_sink::RwStreamSink\">RwStreamSink</a>&lt;S&gt;","synthetic":false,"types":["rw_stream_sink::RwStreamSink"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()