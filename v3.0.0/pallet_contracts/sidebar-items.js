initSidebarItems({"enum":[["Call","Dispatchable calls."],["ContractInfo","Information for managing an account and its sub trie abstraction. This is the required info to cache for an account"],["Error","Error for the contracts module."],["RawEvent","Events for this module."],["RuntimeReturnCode","Every error that can be returned to a contract when it calls any of the host functions."]],"macro":[["convert_args",""],["define_func",""],["gen_signature",""],["gen_signature_dispatch",""],["match_tokens","A simple utility macro that helps to match against a list of tokens."],["register_func",""],["unmarshall_then_body_then_marshall",""]],"mod":[["chain_extension","A mechanism for runtime authors to augment the functionality of contracts."],["weights","Autogenerated weights for pallet_contracts"]],"struct":[["AccountCounter","The subtrie counter."],["CodeStorage","A mapping between an original code hash and instrumented wasm code, ready for execution."],["ContractInfoOf","The code associated with a given account."],["DeletionQueue","Evicted contracts that await child trie deletion."],["GasMeter",""],["GenesisConfig","Genesis config for the module, allow to build genesis storage."],["HostFnWeights","Describes the weight for each imported function that a contract is allowed to call."],["InstructionWeights","Describes the weight for all categories of supported wasm instructions."],["Limits","Describes the upper limits on various metrics."],["Module","Contracts module."],["PrefabWasmModule","A prepared wasm module ready for execution."],["PristineCode","A mapping from an original code hash to the original code, untouched by instrumentation."],["RawAliveContractInfo","Information for managing an account and its sub trie abstraction. This is the required info to cache for an account."],["RawTombstoneContractInfo",""],["Schedule","Definition of the cost schedule and other parameterizations for wasm vm."]],"trait":[["Config",""]],"type":[["AliveContractInfo",""],["BalanceOf",""],["CodeHash",""],["Event","`RawEvent` specialized for the configuration `Config`"],["Gas",""],["NegativeImbalanceOf",""],["TombstoneContractInfo",""],["TrieId",""]]});