(function() {var implementors = {};
implementors["node_runtime"] = [{"text":"impl&lt;__SR_API_BLOCK__:&nbsp;BlockT + UnwindSafe + RefUnwindSafe, RuntimeApiImplCall:&nbsp;CallApiAt&lt;__SR_API_BLOCK__&gt; + 'static&gt; MmrApi&lt;__SR_API_BLOCK__, &lt;&lt;Runtime as Config&lt;DefaultInstance&gt;&gt;::LeafData as LeafDataProvider&gt;::LeafData, &lt;Runtime as Config&lt;DefaultInstance&gt;&gt;::Hash&gt; for RuntimeApiImpl&lt;__SR_API_BLOCK__, RuntimeApiImplCall&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RuntimeApiImplCall::StateBackend: StateBackend&lt;HashFor&lt;__SR_API_BLOCK__&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;u64: UnwindSafe + RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Result&lt;(&lt;&lt;Runtime as Config&gt;::LeafData as LeafDataProvider&gt;::LeafData, Proof&lt;&lt;Runtime as Config&gt;::Hash&gt;), Error&gt;: UnwindSafe + RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;Runtime as Config&gt;::LeafData as LeafDataProvider&gt;::LeafData: UnwindSafe + RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Proof&lt;&lt;Runtime as Config&gt;::Hash&gt;: UnwindSafe + RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Result&lt;(), Error&gt;: UnwindSafe + RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Runtime as Config&gt;::Hash: UnwindSafe + RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;u8&gt;: UnwindSafe + RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Proof&lt;&lt;Runtime as Config&gt;::Hash&gt;: UnwindSafe + RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Result&lt;(), Error&gt;: UnwindSafe + RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;__SR_API_BLOCK__::Header: UnwindSafe + RefUnwindSafe,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()