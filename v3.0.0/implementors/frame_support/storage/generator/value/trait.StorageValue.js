(function() {var implementors = {};
implementors["pallet_babe"] = [{"text":"impl StorageValue&lt;u64&gt; for EpochIndex","synthetic":false,"types":[]},{"text":"impl StorageValue&lt;Vec&lt;(Public, u64), Global&gt;&gt; for Authorities","synthetic":false,"types":[]},{"text":"impl StorageValue&lt;Slot&gt; for GenesisSlot","synthetic":false,"types":[]},{"text":"impl StorageValue&lt;Slot&gt; for CurrentSlot","synthetic":false,"types":[]},{"text":"impl StorageValue&lt;[u8; 32]&gt; for Randomness","synthetic":false,"types":[]}];
implementors["pallet_bounties"] = [{"text":"impl StorageValue&lt;u32&gt; for BountyCount","synthetic":false,"types":[]},{"text":"impl StorageValue&lt;Vec&lt;u32, Global&gt;&gt; for BountyApprovals","synthetic":false,"types":[]}];
implementors["pallet_collective"] = [{"text":"impl&lt;T:&nbsp;Config&lt;I&gt;, I:&nbsp;Instance&gt; StorageValue&lt;Vec&lt;&lt;T as Config&gt;::Hash, Global&gt;&gt; for Proposals&lt;T, I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Instance&gt; StorageValue&lt;u32&gt; for ProposalCount&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&lt;I&gt;, I:&nbsp;Instance&gt; StorageValue&lt;Vec&lt;&lt;T as Config&gt;::AccountId, Global&gt;&gt; for Members&lt;T, I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&lt;I&gt;, I:&nbsp;Instance&gt; StorageValue&lt;&lt;T as Config&gt;::AccountId&gt; for Prime&lt;T, I&gt;","synthetic":false,"types":[]}];
implementors["pallet_contracts"] = [{"text":"impl StorageValue&lt;u64&gt; for AccountCounter","synthetic":false,"types":[]},{"text":"impl StorageValue&lt;Vec&lt;DeletedContract, Global&gt;&gt; for DeletionQueue","synthetic":false,"types":[]}];
implementors["pallet_democracy"] = [{"text":"impl StorageValue&lt;u32&gt; for PublicPropCount","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&gt; StorageValue&lt;Vec&lt;(u32, &lt;T as Config&gt;::Hash, &lt;T as Config&gt;::AccountId), Global&gt;&gt; for PublicProps&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl StorageValue&lt;u32&gt; for ReferendumCount","synthetic":false,"types":[]},{"text":"impl StorageValue&lt;u32&gt; for LowestUnbaked","synthetic":false,"types":[]},{"text":"impl StorageValue&lt;bool&gt; for LastTabledWasExternal","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&gt; StorageValue&lt;(&lt;T as Config&gt;::Hash, VoteThreshold)&gt; for NextExternal&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_elections"] = [{"text":"impl&lt;T:&nbsp;Config&gt; StorageValue&lt;&lt;T as Config&gt;::BlockNumber&gt; for PresentationDuration&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&gt; StorageValue&lt;&lt;T as Config&gt;::BlockNumber&gt; for TermDuration&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl StorageValue&lt;u32&gt; for DesiredSeats","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&gt; StorageValue&lt;Vec&lt;(&lt;T as Config&gt;::AccountId, &lt;T as Config&gt;::BlockNumber), Global&gt;&gt; for Members&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl StorageValue&lt;u32&gt; for VoteCount","synthetic":false,"types":[]},{"text":"impl StorageValue&lt;u32&gt; for NextVoterSet","synthetic":false,"types":[]},{"text":"impl StorageValue&lt;u32&gt; for VoterCount","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&gt; StorageValue&lt;Vec&lt;&lt;T as Config&gt;::AccountId, Global&gt;&gt; for Candidates&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl StorageValue&lt;u32&gt; for CandidateCount","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&gt; StorageValue&lt;(&lt;T as Config&gt;::BlockNumber, u32, Vec&lt;&lt;T as Config&gt;::AccountId, Global&gt;)&gt; for NextFinalize&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&gt; StorageValue&lt;Vec&lt;(&lt;&lt;T as Config&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;T as Config&gt;::AccountId), Global&gt;&gt; for Leaderboard&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_elections_phragmen"] = [{"text":"impl&lt;T:&nbsp;Config&gt; StorageValue&lt;Vec&lt;SeatHolder&lt;&lt;T as Config&gt;::AccountId, &lt;&lt;T as Config&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;, Global&gt;&gt; for Members&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&gt; StorageValue&lt;Vec&lt;SeatHolder&lt;&lt;T as Config&gt;::AccountId, &lt;&lt;T as Config&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;, Global&gt;&gt; for RunnersUp&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&gt; StorageValue&lt;Vec&lt;(&lt;T as Config&gt;::AccountId, &lt;&lt;T as Config&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance), Global&gt;&gt; for Candidates&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl StorageValue&lt;u32&gt; for ElectionRounds","synthetic":false,"types":[]}];
implementors["pallet_identity"] = [{"text":"impl&lt;T:&nbsp;Config&gt; StorageValue&lt;Vec&lt;Option&lt;RegistrarInfo&lt;&lt;&lt;T as Config&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance, &lt;T as Config&gt;::AccountId&gt;&gt;, Global&gt;&gt; for Registrars&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_mmr"] = [{"text":"impl&lt;T:&nbsp;Config&lt;I&gt;, I:&nbsp;Instance&gt; StorageValue&lt;&lt;T as Config&lt;I&gt;&gt;::Hash&gt; for RootHash&lt;T, I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Instance&gt; StorageValue&lt;u64&gt; for NumberOfLeaves&lt;I&gt;","synthetic":false,"types":[]}];
implementors["pallet_node_authorization"] = [{"text":"impl StorageValue&lt;BTreeSet&lt;OpaquePeerId&gt;&gt; for WellKnownNodes","synthetic":false,"types":[]}];
implementors["pallet_society"] = [{"text":"impl&lt;T:&nbsp;Config&lt;I&gt;, I:&nbsp;Instance&gt; StorageValue&lt;&lt;T as Config&gt;::AccountId&gt; for Founder&lt;T, I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&lt;I&gt;, I:&nbsp;Instance&gt; StorageValue&lt;&lt;T as Config&gt;::Hash&gt; for Rules&lt;T, I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&lt;I&gt;, I:&nbsp;Instance&gt; StorageValue&lt;Vec&lt;Bid&lt;&lt;T as Config&gt;::AccountId, &lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;, Global&gt;&gt; for Candidates&lt;T, I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&lt;I&gt;, I:&nbsp;Instance&gt; StorageValue&lt;&lt;&lt;T as Config&lt;I&gt;&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt; for Pot&lt;T, I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&lt;I&gt;, I:&nbsp;Instance&gt; StorageValue&lt;&lt;T as Config&gt;::AccountId&gt; for Head&lt;T, I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&lt;I&gt;, I:&nbsp;Instance&gt; StorageValue&lt;Vec&lt;&lt;T as Config&gt;::AccountId, Global&gt;&gt; for Members&lt;T, I&gt;","synthetic":false,"types":[]}];
implementors["pallet_staking"] = [{"text":"impl StorageValue&lt;u32&gt; for ValidatorCount","synthetic":false,"types":[]},{"text":"impl StorageValue&lt;u32&gt; for MinimumValidatorCount","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&gt; StorageValue&lt;Vec&lt;&lt;T as Config&gt;::AccountId, Global&gt;&gt; for Invulnerables&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl StorageValue&lt;u32&gt; for CurrentEra","synthetic":false,"types":[]},{"text":"impl StorageValue&lt;ActiveEraInfo&gt; for ActiveEra","synthetic":false,"types":[]},{"text":"impl StorageValue&lt;Forcing&gt; for ForceEra","synthetic":false,"types":[]},{"text":"impl StorageValue&lt;Perbill&gt; for SlashRewardFraction","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&gt; StorageValue&lt;&lt;&lt;T as Config&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt; for CanceledSlashPayout&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&gt; StorageValue&lt;Vec&lt;&lt;T as Config&gt;::AccountId, Global&gt;&gt; for SnapshotValidators&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&gt; StorageValue&lt;Vec&lt;&lt;T as Config&gt;::AccountId, Global&gt;&gt; for SnapshotNominators&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&gt; StorageValue&lt;ElectionResult&lt;&lt;T as Config&gt;::AccountId, &lt;&lt;T as Config&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance&gt;&gt; for QueuedElected&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl StorageValue&lt;[u128; 3]&gt; for QueuedScore","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Config&gt; StorageValue&lt;ElectionStatus&lt;&lt;T as Config&gt;::BlockNumber&gt;&gt; for EraElectionStatus&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl StorageValue&lt;bool&gt; for IsCurrentSessionFinal","synthetic":false,"types":[]}];
implementors["pallet_transaction_payment"] = [{"text":"impl StorageValue&lt;FixedU128&gt; for NextFeeMultiplier","synthetic":false,"types":[]}];
implementors["pallet_treasury"] = [{"text":"impl&lt;I:&nbsp;Instance&gt; StorageValue&lt;Vec&lt;u32, Global&gt;&gt; for Approvals&lt;I&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()