initSidebarItems({"enum":[["CallScheme","Call scheme."],["Capture","Capture represents the result of execution."],["Capture","Capture represents the result of execution."],["CreateScheme","Create scheme."],["ExitError","Exit error reason."],["ExitError","Exit error reason."],["ExitFatal","Exit fatal reason."],["ExitFatal","Exit fatal reason."],["ExitReason","Exit reason."],["ExitReason","Exit reason."],["ExitRevert","Exit revert reason."],["ExitRevert","Exit revert reason."],["ExitSucceed","Exit succeed reason."],["ExitSucceed","Exit succeed reason."],["ExternalOpcode","External opcodes."],["ExternalOpcode","External opcodes."],["Opcode","Opcode enum. One-to-one corresponding to an `u8` value."],["Opcode","Opcode enum. One-to-one corresponding to an `u8` value."],["Resolve","Interrupt resolution."]],"mod":[["backend","EVM backends"],["executor","EVM executors"]],"struct":[["Config","Runtime configuration."],["Context","Context of the runtime."],["Machine","Core execution layer for EVM."],["Machine","Core execution layer for EVM."],["Memory","A sequencial memory. It uses Rust's `Vec` for internal representation."],["Memory","A sequencial memory. It uses Rust's `Vec` for internal representation."],["ResolveCall","Call interrupt resolution."],["ResolveCreate","Create interrupt resolution."],["Runtime","EVM runtime."],["Stack","EVM stack."],["Stack","EVM stack."],["Transfer","Transfer from source to target, with given value."],["Valids","Mapping of valid jump destination from code."],["Valids","Mapping of valid jump destination from code."]],"trait":[["Handler","EVM context handler."]],"type":[["Trap","Trap which indicates that an `ExternalOpcode` has to be handled."],["Trap","Trap which indicates that an `ExternalOpcode` has to be handled."]]});