initSidebarItems({"enum":[["DispatchClass","A generalized group of dispatch types."],["Pays","Explicit enum to denote if a transaction pays fee or not."]],"mod":[["constants","These constants are specific to FRAME, and the current implementation of its various components. For example: FRAME System, FRAME Executive, our FRAME support libraries, etc..."]],"struct":[["DispatchInfo","A bundle of static information collected from the `#[weight = $x]` attributes."],["FunctionOf","A struct to represent a weight which is a function of the input arguments. The given items have the following types:"],["PostDispatchInfo","Weight information that is only available post dispatch."],["RuntimeDbWeight","The weight of database operations that the runtime can invoke."]],"trait":[["ClassifyDispatch","Means of classifying a dispatchable function."],["GetDispatchInfo","A `Dispatchable` function (aka transaction) that can carry some static information along with it, using the `#[weight]` attribute."],["PaysFee","Indicates if dispatch function should pay fees or not. If set to `Pays::No`, the block resource limits are applied, yet no fee is deducted."],["WeighData","Means of weighing some particular kind of data (`T`)."],["WithPostDispatchInfo","Allows easy conversion from `DispatchError` to `DispatchErrorWithPostInfo` for dispatchables that want to return a custom a posterior weight on error."]],"type":[["TransactionPriority","Re-export priority as type Priority for a transaction. Additive. Higher is better."],["Weight","Numeric range of a transaction weight."]]});